import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.epages.restdocs-api-spec' version '0.17.1'
    id 'org.hidetake.swagger.generator' version '2.18.2'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

group = 'com.example.ecommerce'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    // Retrofit and OkHttp
    implementation 'com.squareup.retrofit2:retrofit:2.10.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.10.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.10.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.0'
    implementation 'com.google.code.gson:gson'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'com.google.code.gson:gson'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    // API Docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.17.1'

    // Mockito
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-actuator'
    testImplementation 'org.mockito:mockito-core:3.3.0'
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.10.0'

    // Kafka Client
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.avro:avro:1.11.3'
    implementation 'io.confluent:kafka-avro-serializer:7.0.1'
}

tasks.withType(GenerateAvroJavaTask).configureEach {
    fieldVisibility = "PRIVATE"
    createSetters = false
    source("src/main/avro")
    outputDir = file("build/generated-sources")
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

openapi3 {
    server = "https://localhost:8080"
    title = "FastEcommerce - Order/Payment"
    description = "Order/Payment API"
    version = "0.1.0"
    format = "yaml" // or "json"
}

tasks.register("copyOasToSwagger", Copy) {
    delete("src/main/resources/static/swagger-ui/openapi3.yaml")
    from("$buildDir/api-spec/openapi3.yaml")
    into("src/main/resources/static/swagger-ui/.")
    dependsOn("openapi3")
}

test {
    useJUnitPlatform()
}
